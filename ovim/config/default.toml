hook_before_setup_plugin = "set updatetime=500"
hook_after_setup_plugin = ""
# if use plug,set to 1 to improve bootstrap
make_json = 0
# level 0 basic: theme statusline tabline
# level 1 normal: complete search file-explore git comment floaterm e.g.
# level 2 enhanced: motion multi-line align jump
config_level = 2
ovim_plug_manager = "dein"

[var]
python3_host_prog = "~/miniconda3/envs/vim/bin/python"

[plugins."arakashic/nvim-colors-solarized"]
level = 0
repo = "arakashic/nvim-colors-solarized"
if = 0

[plugins."morhetz/gruvbox"]
level = 0
repo = "morhetz/gruvbox"

[plugins."miconda/lucariox.vim"]
level = 0
repo = "miconda/lucariox.vim"

[plugins."hardcoreplayers/oceanic-material"]
level = 0
repo = "hardcoreplayers/oceanic-material"

[plugins."mhartington/oceanic-next"]
level = 0
repo = "mhartington/oceanic-next"

[plugins."https://gitee.com/yelgors/vim-togglemouse.git"]
level = 0
repo = "https://gitee.com/yelgors/vim-togglemouse.git"
branch = "dev"
rev = "dev"
hook_post_source = """call toggle_mouse#map("<F7>")
let g:space_key_map['<F7>'] = ['<F7>','Toogle Mouse(todo)']"""

[plugins."Shougo/defx.nvim"]
level = 1
repo = "Shougo/defx.nvim"
do = ":UpdateRemotePlugins"
on_cmd = "Defx"
hook_add = "source $OVIM_ROOT_PATH/keymaps/defx.vim"
hook_post_source = "source $OVIM_ROOT_PATH/plugins/defx.vim"

[plugins."kristijanhusak/defx-git"]
level = 1
repo = "kristijanhusak/defx-git"
on_source = [ "defx.nvim",]

[plugins."kristijanhusak/defx-icons"]
level = 1
repo = "kristijanhusak/defx-icons"
on_source = [ "defx.nvim",]

[plugins."scrooloose/nerdtree"]
level = 1
repo = "scrooloose/nerdtree"
on = [ "NERDTreeToggle", "NERDTree",]
on_cmd = [ "NERDTreeToggle", "NERDTree",]
hook_add = "source $OVIM_ROOT_PATH/plugins/nerdtree.vim"
if = 0

[plugins."roxma/nvim-yarp"]
level = 1
repo = "roxma/nvim-yarp"
if = "!has('nvim')"

[plugins."roxma/vim-hug-neovim-rpc"]
level = 1
repo = "roxma/vim-hug-neovim-rpc"
if = "!has('nvim')"

[plugins."vim-airline/vim-airline"]
level = 0
repo = "vim-airline/vim-airline"
hook_source = "source $OVIM_ROOT_PATH/plugins/airline.vim"
if = 0

[plugins."vim-airline/vim-airline-themes"]
level = 0
repo = "vim-airline/vim-airline-themes"
if = 0

[plugins."glepnir/spaceline.vim"]
level = 0
repo = "glepnir/spaceline.vim"
hook_source = """set laststatus=2
let g:spaceline_seperate_style = 'none'"""

[plugins."ryanoasis/vim-devicons"]
level = 0
repo = "ryanoasis/vim-devicons"

[plugins."itchyny/lightline.vim"]
level = 0
repo = "itchyny/lightline.vim"
if = 0

[plugins."hardcoreplayers/vim-buffet"]
level = 0
repo = "hardcoreplayers/vim-buffet"
on_event = [ "VimEnter", "GUIEnter",]
hook_source = "source $OVIM_ROOT_PATH/plugins/buffet.vim"
if = 0

[plugins."pacha/vem-tabline"]
level = 0
repo = "pacha/vem-tabline"
on_event = [ "BufRead", "BufAdd", "BufNew",]
hook_source = "source $OVIM_ROOT_PATH/plugins/vem-tabline.vim"

[plugins."bling/vim-bufferline"]
level = 0
repo = "bling/vim-bufferline"
on_event = [ "CursorHold"]
hook_source = """  let g:bufferline_echo = 1

nnoremap <tab>1 :b1<cr>
nnoremap <tab>2 :b2<cr>
nnoremap <tab>3 :b3<cr>
nnoremap <tab>4 :b4<cr>
nnoremap <tab>5 :b5<cr>
nnoremap <tab>6 :b6<cr>
nnoremap <tab>7 :b7<cr>
nnoremap <tab>8 :b8<cr>
nnoremap <tab>9 :b9<cr>
nnoremap <tab>0 :b10<cr>"""

[plugins."ap/vim-buftabline"]
level = 0
repo = "ap/vim-buftabline"
on_event = [ "VimEnter", "GUIEnter",]
hook_source = "source $OVIM_ROOT_PATH/plugins/buftabline.vim"
if = 0

[plugins."Yggdroot/indentLine"]
level = 1
repo = "Yggdroot/indentLine"
hook_source = "source $OVIM_ROOT_PATH/plugins/indentLine.vim"
on_event = [ "BufReadPost", "BufWritePost",]

[plugins."scrooloose/nerdcommenter"]
level = 1
repo = "scrooloose/nerdcommenter"
hook_add = "source $OVIM_ROOT_PATH/plugins/nerdcomment.vim"
on = [ "<Plug>NERDCommenterComment", "<Plug>NERDCommenterNested", "<Plug>NERDCommenterToggle", 
        "<Plug>NERDCommenterMinimal", "<Plug>NERDCommenterInvert", "<Plug>NERDCommenterSexy", 
        "<Plug>NERDCommenterYank", "<Plug>NERDCommenterToEOL", "<Plug>NERDCommenterAppend", 
        "<Plug>NERDCommenterAltDelims", "<Plug>NERDCommenterAlignLeft", 
        "<Plug>NERDCommenterAlignBoth", "<Plug>NERDCommenterUncomment",]
on_map = { n = "<Plug>NERDCommenter" }

[plugins."majutsushi/tagbar"]
level = 1
repo = "majutsushi/tagbar"
on = [ "Tagbar", "TagbarToggle",]
on_cmd = [ "Tagbar",]
hook_add = "source $OVIM_ROOT_PATH/plugins/tarbar.vim"

[plugins."jiangmiao/auto-pairs"]
level = 1
repo = "jiangmiao/auto-pairs"
hook_source = "source $OVIM_ROOT_PATH/plugins/auto-pairs.vim"
on_event = [ "BufReadPost", "BufWritePost",]

[plugins."SirVer/ultisnips"]
level = 1
repo = "SirVer/ultisnips"
hook_source = "source $OVIM_ROOT_PATH/plugins/ultisnips.vim"
on_event = [ "InsertEnter",]

[plugins."honza/vim-snippets"]
level = 1
repo = "honza/vim-snippets"
on_event = [ "InsertEnter",]

[plugins."chiel92/vim-autoformat"]
level = 1
repo = "chiel92/vim-autoformat"
on = "Autoformat"
on_cmd = "Autoformat"
hook_add = "source $OVIM_ROOT_PATH/plugins/autoformat.vim"

[plugins."skywind3000/asyncrun.vim"]
level = 1
repo = "skywind3000/asyncrun.vim"
hook_add = "source $OVIM_ROOT_PATH/plugins/asyncrun.vim"
on = [ "AsyncRun",]
on_cmd = [ "AsyncRun",]

[plugins."pseewald/vim-anyfold"]
level = 1
repo = "pseewald/vim-anyfold"
hook_source = "source $OVIM_ROOT_PATH/plugins/fold.vim"
on_event = [ "BufReadPost", "BufWritePost",]

[plugins."roxma/vim-paste-easy"]
level = 0
repo = "roxma/vim-paste-easy"
on_event = [ "InsertEnter",]

[plugins."tpope/vim-surround"]
level = 1
repo = "tpope/vim-surround"
on_event = [ "InsertEnter",]

[plugins."ludovicchabant/vim-gutentags"]
level = 1
repo = "ludovicchabant/vim-gutentags"
hook_source = "source $OVIM_ROOT_PATH/plugins/gutentags.vim"
on_event = [ "BufReadPost", "BufWritePost",]

[plugins."mhinz/vim-signify"]
level = 1
repo = "mhinz/vim-signify"
hook_add = "source $OVIM_ROOT_PATH/plugins/signify.vim"
hook_post_source = "SignifyEnable"
on = [ "SignifyDiff", "SignifyEnable", "SignifyEnableAll", "SignifyToggle",]
on_cmd = [ "SignifyDiff", "SignifyEnable", "SignifyEnableAll", "SignifyToggle",]
on_event = [ "BufReadPost", "BufWritePost",]

[plugins."liuchengxu/vim-which-key"]
level = 1
repo = "liuchengxu/vim-which-key"
hook_post_source = "source $OVIM_ROOT_PATH/plugins/vim-which-key.vim"

[plugins."voldikss/vim-floaterm"]
level = 1
repo = "voldikss/vim-floaterm"
hook_add = "source $OVIM_ROOT_PATH/plugins/floaterm.vim"
on = [ "FloatermToggle", "FloatermPrev", "FloatermNext", "FloatermNew", 
        "FloatermFirst", "FloatermLast", "FloatermKill",]
on_cmd = [ "FloatermToggle", "FloatermPrev", "FloatermNext", "FloatermNew", 
        "FloatermFirst", "FloatermLast", "FloatermKill",]

[plugins."liuchengxu/vista.vim"]
level = 1
repo = "liuchengxu/vista.vim"
hook_add = "source $OVIM_ROOT_PATH/plugins/vista.vim"
on = [ "Vista", "Vista!", "Vista!!",]
on_cmd = [ "Vista", "Vista!", "Vista!!",]

[plugins."tweekmonster/startuptime.vim"]
level = 0
repo = "tweekmonster/startuptime.vim"
on = "StartupTime"
on_cmd = "StartupTime"

[plugins."wsdjeg/dein-ui.vim"]
level = 0
repo = "wsdjeg/dein-ui.vim"
if = "g:ovim_plug_manager ==# 'dein'"
on_cmd = "DeinUpdate"

[plugins."haya14busa/dein-command.vim"]
level = 0
repo = "haya14busa/dein-command.vim"
if = "g:ovim_plug_manager ==# 'dein'"
on_cmd = "Dein"

[plugins."glepnir/dashboard-nvim"]
level = 1
repo = "glepnir/dashboard-nvim"
hook_source = "source $OVIM_ROOT_PATH/plugins/dashboard.vim"

[plugins."junegunn/vim-easy-align"]
level = 2
repo = "junegunn/vim-easy-align"
on_map = [ "<Plug>(EasyAlign)",]
on = [ "<Plug>(EasyAlign)",]
hook_add = "xmap ga <Plug>(EasyAlign)\nnmap ga <Plug>(EasyAlign)\n"

[plugins."rhysd/accelerated-jk"]
level = 1
repo = "rhysd/accelerated-jk"
on = [ "<Plug>(accelerated_jk_gj)", "<Plug>(accelerated_jk_gk)",]
on_map = [ "<Plug>(accelerated",]
hook_add = "nmap j <Plug>(accelerated_jk_gj)\nnmap k <Plug>(accelerated_jk_gk)\n"

[plugins."junegunn/vim-peekaboo"]
level = 2
repo = "junegunn/vim-peekaboo"
on_event = [ "CursorHold",]
hook_post_source = 'call peekaboo#on()'

[plugins."easymotion/vim-easymotion"]
level = 2
repo = "easymotion/vim-easymotion"
on_event = [ "CursorHold",]
hook_source = """let g:leader_key_map[","] = 'EasyMotion'"""

[plugins."junegunn/vim-after-object"]
level = 2
repo = "junegunn/vim-after-object"
hook_post_source = """call after_object#enable('=',':','#',' ')"""
on_event = [ "CursorHold",]

[plugins."cespare/vim-toml"]
level = 1
repo = "cespare/vim-toml"
ft = "toml"
on_ft = "toml"

[plugins."mg979/vim-visual-multi"]
level = 2
repo = "mg979/vim-visual-multi"
on_event = [ "CursorHold",]

[plugins."mbbill/undotree"]
level = 2
repo = "mbbill/undotree"
hook_add = """nnoremap <leader>u :UndotreeToggle<cr>
let g:leader_key_map.u = '撤销'"""
on = [ "UndotreeToggle",]
on_cmd = [ "UndotreeToggle",]

[plugins."pechorin/any-jump.vim"]
level = 2
repo = "pechorin/any-jump.vim"
on = [ "AnyJump", "AnyJumpVisual", "AnyJumpBack", "AnyJumpLastResults",]
on_cmd = [ "AnyJump", "AnyJumpVisual", "AnyJumpBack", "AnyJumpLastResults",]
hook_add = "source $OVIM_ROOT_PATH/plugins/any-jump.vim"




[modules.autocomplete]
level = 1
name = "autocomplete"
method = "deoplete"

[modules.search]
level = 1
name = "search"
method = [ "leaderf", "ctrlp", "fzf",]
leader_prefix = "s"
