hook_before_setup_plugin = """set updatetime=1000
set timeoutlen=300
set wildmenu
let &t_ut=''"""
hook_after_setup_plugin = ""
# if use plug,set to 1 to improve bootstrap
make_json = 0
# level 0 pure: no plugin and module
# level 1 basic: theme statusline tabline
# level 2 normal: complete search file-explore git comment floaterm e.g.
# level 3 enhanced: motion multi-line align jump
config_level = 3
ovim_plug_manager = "dein"
ovim_lua = true

[var]
root_markers = [".git",".hg",".svn",".root",".project",
                "compile_commands.json","CMakeLists.txt",
                "Makefile","makefile"]


[plugins."skywind3000/asyncrun.vim"]
level = 3
repo = "skywind3000/asyncrun.vim"
hook_add = "source $OVIM_ROOT_PATH/plugins/asyncrun.vim"
on = [ "AsyncRun",]
on_cmd = [ "AsyncRun",]
on_func = ["asyncrun#"]

[plugins."skywind3000/asynctasks.vim"]
level = 3
repo = "skywind3000/asynctasks.vim"
hook_add = "source $OVIM_ROOT_PATH/plugins/asynctasks.add.vim"
on_cmd = ["AsyncTask","AsyncTaskEdit","AsyncTaskMacro","AsyncTaskProfile"]
on = ["AsyncTask","AsyncTaskEdit","AsyncTaskMacro","AsyncTaskProfile"]


# [plugins."pseewald/vim-anyfold"]
# level = 3
# repo = "pseewald/vim-anyfold"
# hook_source = "source $OVIM_ROOT_PATH/plugins/fold.vim"
# on_event = [ "BufReadPost", "BufWritePost",]

# [plugins."roxma/vim-paste-easy"]
# level = 2
# repo = "roxma/vim-paste-easy"
# on_event = [ "InsertEnter",]

[plugins."tpope/vim-surround"]
level = 3
repo = "tpope/vim-surround"
on_event = [ "VimEnter",]

[plugins."ludovicchabant/vim-gutentags"]
level = 2
repo = "ludovicchabant/vim-gutentags"
hook_source = "source $OVIM_ROOT_PATH/plugins/gutentags.source.vim"
on_cmd = ['GutentagsUpdate','GutentagsToggleEnabled','GutentagsToggleTrace']
on_event = [ "VimEnter",]
hook_post_source = 'source $OVIM_ROOT_PATH/plugins/gutentags.post-source.vim'

[plugins."skywind3000/gutentags_plus"]
level = 2
repo = "skywind3000/gutentags_plus"
on_event = [ "VimEnter",]
hook_source = 'let g:gutentags_plus_nomap = 1'

[plugins."mhinz/vim-signify"]
level = 2
repo = "mhinz/vim-signify"
hook_add = "source $OVIM_ROOT_PATH/plugins/signify.vim"
hook_post_source = "SignifyEnable"
on = [ "SignifyDiff", "SignifyEnable", "SignifyEnableAll", "SignifyToggle",]
on_cmd = [ "SignifyDiff", "SignifyEnable", "SignifyEnableAll", "SignifyToggle",]
on_event = [ "BufReadPost", "BufWritePost",]

[plugins."tpope/vim-fugitive"]
level = 2
repo = "tpope/vim-fugitive"
hook_source = "source $OVIM_ROOT_PATH/plugins/fugitive.source.vim"
on = ["Git","G"]
on_cmd = ["Git","G"]
on_event = ["VimEnter"]
if = "!ovim#utils#check_lua()"


[plugins."junegunn/vim-easy-align"]
level = 3
repo = "junegunn/vim-easy-align"
on_map = [ "<Plug>(EasyAlign)",]
on = [ "<Plug>(EasyAlign)",]
hook_add = "xmap ga <Plug>(EasyAlign)\nnmap ga <Plug>(EasyAlign)\n"

[plugins."godlygeek/tabular"]
level = 3
repo = "godlygeek/tabular"
on = ["Tabularize","Tab"]
on_cmd = ["Tabularize","Tab"]


[plugins."junegunn/vim-peekaboo"]
level = 3
repo = "junegunn/vim-peekaboo"
on_event = [ "VimEnter",]
hook_post_source = 'call peekaboo#on()'


[plugins."mg979/vim-visual-multi"]
level = 3
repo = "mg979/vim-visual-multi"
on_event = [ "VimEnter",]


[plugins."pechorin/any-jump.vim"]
level = 3
repo = "pechorin/any-jump.vim"
on = [ "AnyJump", "AnyJumpVisual", "AnyJumpBack", "AnyJumpLastResults",]
on_cmd = [ "AnyJump", "AnyJumpVisual", "AnyJumpBack", "AnyJumpLastResults",]
hook_add = "source $OVIM_ROOT_PATH/plugins/any-jump.vim"

# [plugins."Shougo/echodoc.vim"]
# level = 3
# repo = 'Shougo/echodoc.vim'
# on_event = ['InsertEnter']
# hook_source = """
# let g:echodoc#enable_at_startup = 1
# let g:echodoc#type = has('nvim') ? 'floating' : 'popup'
# highlight link EchoDocFloat Pmenu"""

[plugins."plasticboy/vim-markdown"]
level = 3
repo = "plasticboy/vim-markdown"
on_ft = "markdown"
for = ["markdown","vim-plug"]
hook_source = "source $OVIM_ROOT_PATH/plugins/markdown.vim"

[plugins."iamcco/markdown-preview.nvim"]
level = 3
repo = "iamcco/markdown-preview.nvim"
on_ft = ["markdown","pandoc.markdown","rmd"]
for = ["markdown","pandoc.markdown","rmd","vim-plug"]
build = "sh -c 'cd app && yarn install'"

[plugins."yianwillis/vimcdoc"]
level = 1
repo = "yianwillis/vimcdoc"
on_cmd = ['h','help']
if = "!has('nvim')"

[plugins."sheerun/vim-polyglot"]
level = 3
repo = "sheerun/vim-polyglot"
on_event = ["VimEnter"]
if = 0

[plugins."tpope/vim-unimpaired"]
level = 3
repo = "tpope/vim-unimpaired"
on_event = ["VimEnter"]

# [plugins."puremourning/vimspector"]
# level = 3
# repo = "puremourning/vimspector"
# on_map = "<Plug>Vimspector"
# on_func = ["vimspector#"]
# on_cmd = ["VimspectorInstall","VimspectorUpdate"]
# on = ["VimspectorInstall","VimspectorUpdate",
#         "<Plug>VimspectorContinue","<Plug>VimspectorStop",
#         "<Plug>VimspectorRestart","<Plug>VimspectorPause",
#         "<Plug>VimspectorToggleBreakpoint","<Plug>VimspectorToggleConditionalBreakpoint",
#         "<Plug>VimspectorAddFunctionBreakpoint","<Plug>VimspectorStepOver",
#         "<Plug>VimspectorStepInto","<Plug>VimspectorStepOut",
#         "<Plug>VimspectorRunToCursor",]
# hook_add = "source $OVIM_ROOT_PATH/plugins/vimspector.add.vim"

[plugins."jmcantrell/vim-virtualenv"]
level = 3
repo = "jmcantrell/vim-virtualenv"
on_ft = ["python"]
for = ["python","vim-plug"]
hook_source = """let g:virtualenv_directory = '~/.cache/venv'
let g:virtualenv_auto_activate = 0
"""

[plugins."lambdalisue/vim-pyenv"]
level = 3
repo = "lambdalisue/vim-pyenv"
on_ft = ["python"]
for = ["python","vim-plug"]
hook_source = """let g:pyenv#auto_assign_ctags = 0
let g:pyenv#auto_activate = 0"""

[plugins."t9md/vim-choosewin"]
level = 3
repo = "t9md/vim-choosewin"
on_event = ["VimEnter"]
on = ["<Plug>(choosewin)"]
on_map = ["<Plug>(choosewin)"]
hook_source = "source $OVIM_ROOT_PATH/plugins/vim-choosewin.source.vim"

# [plugins."lambdalisue/suda.vim"]
# level = 3
# repo = "lambdalisue/suda.vim"
# on = ["SudaRead","SudaWrite"]
# on_cmd = ["SudaRead","SudaWrite"]

[plugins."lervag/vimtex"]
level = 3
repo = "lervag/vimtex"
on_ft = ["markdown","latex","tex"]
for = ["markdown","latex","tex","vim-plug"]

[plugins."DanilaMihailov/beacon.nvim"]
level = 3
repo = "DanilaMihailov/beacon.nvim"
on_event = ['VimEnter']
if = 0
### modules
[modules.theme]
level = 1
name = "theme"
use = ["kanagawa", "github_dark", "one","zephyr","gruvbox","oceanic_material","oceanic_next","lucariox","vim-material","solarized"]

[modules.theme.options]
theme-one = {repo = 'rakr/vim-one'}
theme-next = {repo = "mhartington/oceanic-next"}
theme-material = {repo = "hardcoreplayers/oceanic-material"}
theme-gruvbox = {repo = "morhetz/gruvbox"}
theme-lucariox = {repo = "miconda/lucariox.vim"}
#" Dark
#set background=dark
#colorscheme vim-material

#" Palenight
#let g:material_style='palenight'
#set background=dark
#colorscheme vim-material

#" Oceanic
#let g:material_style='oceanic'
#set background=dark
#colorscheme vim-material

#" Light
#set background=light
#colorscheme vim-material
#airline
#let g:airline_theme='material'
theme-vim-material = {repo = "hzchirs/vim-material"}
theme-nvim-colors-solarized = {repo = "arakashic/nvim-colors-solarized"}
theme-zephyr-nvim = {repo = "glepnir/zephyr-nvim", if = "has('nvim')"}
theme-github-nvim = {repo = "projekt0n/github-nvim-theme", if = "has('nvim')"}
theme-kanagawa = {repo = "rebelot/kanagawa.nvim", if = "has('nvim')"}